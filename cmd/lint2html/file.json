{"Issues":[{"FromLinter":"unused","Text":"var `mainConsensusParamsKey` is unused","SourceLines":null,"Replacement":{"NeedOnlyDelete":true,"NewLines":null,"Inline":null},"LineRange":{"From":31,"To":0},"Pos":{"Filename":"baseapp/baseapp.go","Offset":813,"Line":31,"Column":2}},{"FromLinter":"unused","Text":"func `makeTestCodec` is unused","SourceLines":null,"Replacement":{"NeedOnlyDelete":true,"NewLines":null,"Inline":null},"LineRange":{"From":27,"To":0},"Pos":{"Filename":"x/staking/simulation/decoder_test.go","Offset":607,"Line":27,"Column":6}},{"FromLinter":"unused","Text":"func `(*merkleMap).kvPairs` is unused","SourceLines":null,"Replacement":{"NeedOnlyDelete":true,"NewLines":null,"Inline":null},"LineRange":{"From":59,"To":0},"Pos":{"Filename":"store/rootmulti/merkle_map.go","Offset":1398,"Line":59,"Column":22}},{"FromLinter":"staticcheck","Text":"SA1019: authtypes.NewStdFee is deprecated: NewStdFee returns a new instance of StdFee ","SourceLines":["\tfee := authtypes.NewStdFee(50000, sdk.Coins{sdk.NewInt64Coin(\"atom\", 150)})"],"Replacement":null,"Pos":{"Filename":"x/auth/client/tx_test.go","Offset":2884,"Line":123,"Column":9}},{"FromLinter":"staticcheck","Text":"SA1019: authtypes.StdSignature is deprecated: StdSignature represents a sig ","SourceLines":["\tstdTx := authtypes.NewStdTx([]sdk.Msg{}, fee, []authtypes.StdSignature{}, \"foomemo\")"],"Replacement":null,"Pos":{"Filename":"x/auth/client/tx_test.go","Offset":3002,"Line":124,"Column":50}},{"FromLinter":"staticcheck","Text":"SA1019: authtypes.StdFee is deprecated: StdFee includes the amount of coins paid in fees and the maximum gas to be used by the transaction. The ratio yields an effective \"gasprice\", which must be above some miminum to be accepted into the mempool. ","SourceLines":["\ttx := authtypes.NewStdTx(msgs, authtypes.StdFee{}, []authtypes.StdSignature{}, \"\")"],"Replacement":null,"Pos":{"Filename":"x/auth/client/tx_test.go","Offset":3505,"Line":139,"Column":33}},{"FromLinter":"goimports","Text":"File is not `goimports`-ed","SourceLines":["\t\"github.com/cosmos/cosmos-sdk/std\""],"Replacement":{"NeedOnlyDelete":true,"NewLines":null,"Inline":null},"Pos":{"Filename":"x/auth/keeper/keeper_test.go","Offset":0,"Line":4,"Column":0}},{"FromLinter":"goimports","Text":"File is not `goimports`-ed","SourceLines":["\t\"github.com/cosmos/cosmos-sdk/std\""],"Replacement":{"NeedOnlyDelete":true,"NewLines":null,"Inline":null},"Pos":{"Filename":"x/staking/keeper/common_test.go","Offset":0,"Line":4,"Column":0}},{"FromLinter":"staticcheck","Text":"SA1019: types.NewStdFee is deprecated: NewStdFee returns a new instance of StdFee ","SourceLines":["\tNewStdFee                         = types.NewStdFee"],"Replacement":null,"Pos":{"Filename":"x/auth/alias.go","Offset":2504,"Line":56,"Column":38}},{"FromLinter":"staticcheck","Text":"SA1019: types.StdFee is deprecated: StdFee includes the amount of coins paid in fees and the maximum gas to be used by the transaction. The ratio yields an effective \"gasprice\", which must be above some miminum to be accepted into the mempool. ","SourceLines":["\tStdFee                           = types.StdFee"],"Replacement":null,"Pos":{"Filename":"x/auth/alias.go","Offset":4323,"Line":92,"Column":37}},{"FromLinter":"staticcheck","Text":"SA1019: types.StdSignature is deprecated: StdSignature represents a sig ","SourceLines":["\tStdSignature                     = types.StdSignature"],"Replacement":null,"Pos":{"Filename":"x/auth/alias.go","Offset":4425,"Line":94,"Column":37}},{"FromLinter":"scopelint","Text":"Using the variable on range scope `tc` in function literal","SourceLines":["\t\t\ttc.malleate()"],"Replacement":null,"Pos":{"Filename":"x/ibc/03-connection/keeper/keeper_test.go","Offset":6848,"Line":173,"Column":4}},{"FromLinter":"scopelint","Text":"Using the variable on range scope `tc` in function literal","SourceLines":["\t\t\tif tc.expPass {"],"Replacement":null,"Pos":{"Filename":"x/ibc/03-connection/keeper/keeper_test.go","Offset":7233,"Line":181,"Column":7}},{"FromLinter":"scopelint","Text":"Using the variable on range scope `i` in function literal","SourceLines":["\t\t\t\tsuite.Require().NoError(err, \"valid test case %d failed: %s\", i, tc.msg)"],"Replacement":null,"Pos":{"Filename":"x/ibc/03-connection/keeper/keeper_test.go","Offset":7312,"Line":182,"Column":67}},{"FromLinter":"scopelint","Text":"Using the variable on range scope `i` in function literal","SourceLines":["\t\t\t\tsuite.Require().Error(err, \"invalid test case %d passed: %s\", i, tc.msg)"],"Replacement":null,"Pos":{"Filename":"x/ibc/03-connection/keeper/keeper_test.go","Offset":7495,"Line":185,"Column":67}},{"FromLinter":"goimports","Text":"File is not `goimports`-ed","SourceLines":["\t\"github.com/cosmos/cosmos-sdk/std\""],"Replacement":{"NeedOnlyDelete":true,"NewLines":null,"Inline":null},"Pos":{"Filename":"x/staking/simulation/decoder_test.go","Offset":0,"Line":5,"Column":0}},{"FromLinter":"govet","Text":"composites: `github.com/cosmos/cosmos-sdk/x/capability/types.GenesisState` composite literal uses unkeyed fields","SourceLines":["\treturn cdc.MustMarshalJSON(types.GenesisState{index})"],"Replacement":null,"Pos":{"Filename":"x/capability/module.go","Offset":3923,"Line":117,"Column":29}},{"FromLinter":"staticcheck","Text":"SA1019: types.NewStdFee is deprecated: NewStdFee returns a new instance of StdFee ","SourceLines":["\tfee := types.NewStdFee(0, sdk.NewCoins(sdk.NewInt64Coin(\"atom\", 0)))"],"Replacement":null,"Pos":{"Filename":"x/auth/ante/ante_test.go","Offset":15077,"Line":394,"Column":9}},{"FromLinter":"staticcheck","Text":"SA1019: types.NewStdFee is deprecated: NewStdFee returns a new instance of StdFee ","SourceLines":["\tfee = types.NewStdFee(801, sdk.NewCoins(sdk.NewInt64Coin(\"atom\", 0)))"],"Replacement":null,"Pos":{"Filename":"x/auth/ante/ante_test.go","Offset":15362,"Line":401,"Column":8}},{"FromLinter":"staticcheck","Text":"SA1019: types.StdFee is deprecated: StdFee includes the amount of coins paid in fees and the maximum gas to be used by the transaction. The ratio yields an effective \"gasprice\", which must be above some miminum to be accepted into the mempool. ","SourceLines":["\t\tfee     types.StdFee"],"Replacement":null,"Pos":{"Filename":"x/auth/ante/ante_test.go","Offset":19823,"Line":508,"Column":11}},{"FromLinter":"staticcheck","Text":"SA1019: types.StdSignature is deprecated: StdSignature represents a sig ","SourceLines":["\tstdTx.Signatures = []types.StdSignature{}"],"Replacement":null,"Pos":{"Filename":"x/auth/ante/ante_test.go","Offset":29739,"Line":778,"Column":23}},{"FromLinter":"staticcheck","Text":"SA1019: types.StdSignature is deprecated: StdSignature represents a sig ","SourceLines":["\tsigTx.Signatures = []types.StdSignature{{}}"],"Replacement":null,"Pos":{"Filename":"x/auth/ante/basic_test.go","Offset":3957,"Line":126,"Column":23}},{"FromLinter":"staticcheck","Text":"SA1019: authtypes.StdFee is deprecated: StdFee includes the amount of coins paid in fees and the maximum gas to be used by the transaction. The ratio yields an effective \"gasprice\", which must be above some miminum to be accepted into the mempool. ","SourceLines":["\tgenTxs := authtypes.NewStdTx([]sdk.Msg{msg1, msg2}, authtypes.StdFee{}, nil, \"\")"],"Replacement":null,"Pos":{"Filename":"x/genutil/types/genesis_state_test.go","Offset":1243,"Line":44,"Column":54}},{"FromLinter":"staticcheck","Text":"SA1019: authtypes.StdFee is deprecated: StdFee includes the amount of coins paid in fees and the maximum gas to be used by the transaction. The ratio yields an effective \"gasprice\", which must be above some miminum to be accepted into the mempool. ","SourceLines":["\tgenTxs := authtypes.NewStdTx([]sdk.Msg{msg1}, authtypes.StdFee{}, nil, \"\")"],"Replacement":null,"Pos":{"Filename":"x/genutil/types/genesis_state_test.go","Offset":1660,"Line":56,"Column":48}}],"Report":{"Linters":[{"Name":"govet","Enabled":true,"EnabledByDefault":true},{"Name":"bodyclose","Enabled":true},{"Name":"errcheck","EnabledByDefault":true},{"Name":"golint","Enabled":true},{"Name":"rowserrcheck"},{"Name":"staticcheck","Enabled":true,"EnabledByDefault":true},{"Name":"unused","Enabled":true,"EnabledByDefault":true},{"Name":"gosimple","Enabled":true,"EnabledByDefault":true},{"Name":"stylecheck","Enabled":true},{"Name":"gosec","Enabled":true},{"Name":"structcheck","Enabled":true,"EnabledByDefault":true},{"Name":"varcheck","EnabledByDefault":true},{"Name":"interfacer","Enabled":true},{"Name":"unconvert","Enabled":true},{"Name":"ineffassign","Enabled":true,"EnabledByDefault":true},{"Name":"dupl"},{"Name":"goconst","Enabled":true},{"Name":"deadcode","Enabled":true,"EnabledByDefault":true},{"Name":"gocyclo"},{"Name":"gocognit"},{"Name":"typecheck","Enabled":true,"EnabledByDefault":true},{"Name":"gofmt","Enabled":true},{"Name":"goimports","Enabled":true},{"Name":"maligned","Enabled":true},{"Name":"depguard","Enabled":true},{"Name":"misspell","Enabled":true},{"Name":"lll"},{"Name":"unparam"},{"Name":"dogsled","Enabled":true},{"Name":"nakedret","Enabled":true},{"Name":"prealloc","Enabled":true},{"Name":"scopelint","Enabled":true},{"Name":"gocritic","Enabled":true},{"Name":"gochecknoinits"},{"Name":"gochecknoglobals"},{"Name":"godox"},{"Name":"funlen"},{"Name":"whitespace"},{"Name":"wsl"},{"Name":"goprintffuncname"},{"Name":"gomnd"},{"Name":"gomodguard"},{"Name":"godot"},{"Name":"testpackage"},{"Name":"nestif"}]}}